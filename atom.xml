<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ycr&#39;s Blog</title>
  
  <subtitle>“喜欢你的人一直有空，什么都懂，无所不能。”</subtitle>
  <link href="https://ycr10.xyz/atom.xml" rel="self"/>
  
  <link href="https://ycr10.xyz/"/>
  <updated>2021-03-21T09:39:38.368Z</updated>
  <id>https://ycr10.xyz/</id>
  
  <author>
    <name>YCR</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>个人环境简介 NO.2 - Zsh</title>
    <link href="https://ycr10.xyz/2021/03/21/%E4%B8%AA%E4%BA%BA%E7%8E%AF%E5%A2%83%E7%AE%80%E4%BB%8B-NO-2-Zsh/"/>
    <id>https://ycr10.xyz/2021/03/21/%E4%B8%AA%E4%BA%BA%E7%8E%AF%E5%A2%83%E7%AE%80%E4%BB%8B-NO-2-Zsh/</id>
    <published>2021-03-21T09:38:43.000Z</published>
    <updated>2021-03-21T09:39:38.368Z</updated>
    
    <content type="html"><![CDATA[<h1 id="个人环境简介-NO-2-Zsh"><a href="#个人环境简介-NO-2-Zsh" class="headerlink" title="个人环境简介 NO.2 - Zsh"></a>个人环境简介 NO.2 - Zsh</h1><p>用 <code>Shell</code> 的各位同志们，你们现在用的都是什么shell呢？是 <code>Bash</code> 还是 <code>Zsh</code> ？</p><p>目前常用的 <code>Linux</code> 系统和 <code>OS X</code> 系统的默认 <code>Shell</code> 都是 <code>bash</code> 。但是 <code>Zsh</code> 的配置实在是麻烦。所以这里我使用一个和好用又方便的开源软件 <a href="https://ohmyz.sh/"><code>oh my zsh</code></a></p><h2 id="安装zsh"><a href="#安装zsh" class="headerlink" title="安装zsh"></a>安装zsh</h2><ol><li><p><code>Ubuntu Linux</code> 用户执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update &amp;&amp; sudo apt install zsh</span><br></pre></td></tr></table></figure></li><li><p><code>Redhat Linux</code> 用户执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum -y update &amp;&amp; sudo yum install zsh</span><br></pre></td></tr></table></figure></li><li><p><code>Windows</code> 用户</p><p> 洗洗睡吧~ （或者可以使用 <code>Wsl</code> 试试，看看<a class="link"   href="https://www.ycr10.xyz/2021/03/05/%E4%B8%AA%E4%BA%BA%E7%8E%AF%E5%A2%83%E7%AE%80%E4%BB%8B-NO-1-Wsl-2/" >这篇文章<i class="fas fa-external-link-alt"></i></a>）</p></li></ol><p>安装完成后设置当前用户使用 <code>zsh</code> ：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chsh -s /bin/zsh</span><br></pre></td></tr></table></figure><p>根据提示输入当前用户的密码就可以了。</p><p>安装成功打开 <code>Terminal</code> 就会出现下面这样 <del>（是不是很丑）</del></p><p><img src="https://s3.ax1x.com/2021/03/16/6sZEo4.png" alt="1.png"></p><h2 id="安装-oh-my-zsh"><a href="#安装-oh-my-zsh" class="headerlink" title="安装 oh my zsh"></a>安装 <code>oh my zsh</code></h2><p>去 <code>oh my zsh</code> 官网寻找<a class="link"   href="https://ohmyz.sh/#install" >下载命令<i class="fas fa-external-link-alt"></i></a></p><p><del>PS：下载命令是 <code>raw.github.com</code> 大家懂的都懂</del></p><h3 id="国内的下载方案："><a href="#国内的下载方案：" class="headerlink" title="国内的下载方案："></a>国内的下载方案：</h3><p><del>Gitee yyds</del></p><ol><li>首先下载安装命令</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://gitee.com/mirrors/oh-my-zsh/raw/master/tools/install.sh</span><br></pre></td></tr></table></figure><ol start="2"><li>然后编辑下载命令</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ./install.sh</span><br></pre></td></tr></table></figure><ol start="3"><li><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Default settings</span></span><br><span class="line">ZSH=<span class="variable">$&#123;ZSH:-~/.oh-my-zsh&#125;</span></span><br><span class="line">REPO=<span class="variable">$&#123;REPO:-ohmyzsh/ohmyzsh&#125;</span></span><br><span class="line">REMOTE=<span class="variable">$&#123;REMOTE:-https://github.com/<span class="variable">$&#123;REPO&#125;</span>.git&#125;</span></span><br><span class="line">BRANCH=<span class="variable">$&#123;BRANCH:-master&#125;</span> </span><br></pre></td></tr></table></figure><p>改成</p></li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Default settings</span></span><br><span class="line">ZSH=<span class="variable">$&#123;ZSH:-~/.oh-my-zsh&#125;</span></span><br><span class="line">REPO=<span class="variable">$&#123;REPO:-oh-my-zsh&#125;</span></span><br><span class="line">REMOTE=<span class="variable">$&#123;REMOTE:-https://gitee.com/mirrors/<span class="variable">$&#123;REPO&#125;</span>.git&#125;</span></span><br><span class="line">BRANCH=<span class="variable">$&#123;BRANCH:-master&#125;</span> </span><br></pre></td></tr></table></figure><ol start="4"><li>然后给权限</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x ./install.sh</span><br></pre></td></tr></table></figure><ol start="5"><li>运行</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./intall.sh</span><br></pre></td></tr></table></figure><ol start="6"><li>出现下图即为安装成功</li></ol><p><img src="https://s3.ax1x.com/2021/03/16/6smzJH.png" alt="2.png"></p><h2 id="配置主题-powerlevel10k"><a href="#配置主题-powerlevel10k" class="headerlink" title="配置主题 powerlevel10k"></a>配置主题 <code>powerlevel10k</code></h2><p>这里我用的是 <code>powerlevel10k</code></p><p><a class="link"   href="https://github.com/romkatv/powerlevel10k" >Github<i class="fas fa-external-link-alt"></i></a><br><a class="link"   href="https://gitee.com/romkatv/powerlevel10k" >Gitee<i class="fas fa-external-link-alt"></i></a></p><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone --depth=1 https://github.com/romkatv/powerlevel10k.git $&#123;ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom&#125;/themes/powerlevel10k</span><br></pre></td></tr></table></figure><p><code>github.com</code>大家如果觉得慢的换 <code>gitee.com</code></p><p><del>Gitee yyds</del></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone --depth=1 https://gitee.com/romkatv/powerlevel10k.git $&#123;ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom&#125;/themes/powerlevel10k</span><br></pre></td></tr></table></figure><h3 id="配置-zshrc"><a href="#配置-zshrc" class="headerlink" title="配置 ~/.zshrc"></a>配置 <code>~/.zshrc</code></h3><p>进入编辑模式，编辑 <code>ZSH_THEME=&quot;&quot;</code> ，改成 <code>ZSH_THEME=&quot;powerlevel10k/powerlevel10k&quot;</code>，重新加载，即可载入主题。</p><h3 id="修改字体"><a href="#修改字体" class="headerlink" title="修改字体"></a>修改字体</h3><p>因为 <code>powerlevel10k</code> <del>(下文简称 <code>p10k</code> )</del> 有很多奇奇怪怪的字符，所以要配置字体。然而官方给的字体文件是放在 <code>raw.github.com</code> 的，所以…… <del>懂的都懂</del></p><p>自己去网上下一个就好了~</p><h3 id="修改-Windows-Terminal-字体设置"><a href="#修改-Windows-Terminal-字体设置" class="headerlink" title="修改 Windows Terminal 字体设置"></a>修改 <code>Windows Terminal</code> 字体设置</h3><ol><li><p>打开 <code>Windows Terminal Setting</code></p><p> <img src="https://s3.ax1x.com/2021/03/16/6s7NeU.png" alt="3.png"></p></li><li><p>在你想要添加字体设置的终端配置下添加</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;fontFace&quot;: &quot;MesloLGS NF&quot;</span><br></pre></td></tr></table></figure><p> 以我的为例，添加完后的配置为：</p> <figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;guid&quot;</span>: <span class="string">&quot;&#123;GUID&#125;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;hidden&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;Ubuntu-20.04&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;source&quot;</span>: <span class="string">&quot;Windows.Terminal.Wsl&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;fontFace&quot;</span>: <span class="string">&quot;MesloLGS NF&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后就可以正常显示了。</p></li></ol><h3 id="p10k-configure"><a href="#p10k-configure" class="headerlink" title="p10k configure"></a><code>p10k configure</code></h3><p>这是 <code>powerlevel10k</code> 的一个配置命令，在你首次打开他的时候会自动运行。开始是几个字符。用来检测你的字体是否正常，而后面你就可以根据自己的喜好来调整个性化设置。</p><p>这里就放一张我自己配置完后的图给大家看看吧</p><p><img src="https://s3.ax1x.com/2021/03/16/6sb7dS.png" alt="4.png"></p><h2 id="oh-my-zsh-插件配置"><a href="#oh-my-zsh-插件配置" class="headerlink" title="oh my zsh 插件配置"></a><code>oh my zsh</code> 插件配置</h2><p><code>oh my zsh</code> 的好处有很多，插件就是一个好处。这里我推荐几个我用得比较顺手的。</p><p><del>PS：中国大陆的同志们，如果发现 <code>Github</code> 被墙了的话，可以上 <code>Gitee</code> 碰碰运气。</del></p><h3 id="1-git"><a href="#1-git" class="headerlink" title="1. git"></a>1. <code>git</code></h3><p>这个插件对使用git的同志们十分的友好，<code>oh my zsh</code> 已经默认开启了。</p><h3 id="2-z"><a href="#2-z" class="headerlink" title="2. z"></a>2. <code>z</code></h3><p>这个插件是用来记录自己的历史记录的。 <code>oh my zsh</code> 已经默认安装了，需要自行开启。</p><h3 id="3-zsh-autosuggestions"><a href="#3-zsh-autosuggestions" class="headerlink" title="3. zsh-autosuggestions"></a>3. <code>zsh-autosuggestions</code></h3><p>这个插件是用来记录你的命令历史记录的。用着真的非常舒服。有时候自己忘掉的命令TA都帮你记着，多方便啊！<del>省了一个百度的时间。</del></p><p>安装方式</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/zsh-users/zsh-autosuggestions $&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;/plugins/zsh-autosuggestions</span><br></pre></td></tr></table></figure><h3 id="4-zsh-syntax-highlighting"><a href="#4-zsh-syntax-highlighting" class="headerlink" title="4. zsh-syntax-highlighting"></a>4. <code>zsh-syntax-highlighting</code></h3><p><code>Linux</code> 的命令太多了，有时候命令记得不清楚，这个插件就会非常方便的告诉你正确与否。（正确绿色，错误红色）<del>真好啊，又省了一个百度的时间。</del></p><p>安装方式</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/zsh-users/zsh-syntax-highlighting.git $&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;/plugins/zsh-syntax-highlighting</span><br></pre></td></tr></table></figure><h3 id="5-sudo"><a href="#5-sudo" class="headerlink" title="5. sudo"></a>5. <code>sudo</code></h3><p><code>Linux</code> 上权限区分的比较详细，我们日常为了安全起见，比较少用 <code>root</code> 这样的超级用户办事，而不少命令都需要我们升级权限执行。而我们又经常忘记这件事。这个插件就给了我们很好的救济。只需打两下 <code>ESC</code> ，就会自动在命令的前面给你加上 <code>sudo</code> 。<del>多好啊，又少了一个按方向键的时间。</del></p><p><code>oh my zsh</code> 已经预装了这个插件，需要用户自行启用。</p><h3 id="修改-zshrc"><a href="#修改-zshrc" class="headerlink" title="修改 ./.zshrc"></a>修改 <code>./.zshrc</code></h3><p>用编辑器打开 <code>./.zshrc</code> ，编辑 <code>plugins</code></p><p>编辑完成后，记得重新加载下配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source ./.zshrc</span><br></pre></td></tr></table></figure><p>我的插件最终配置为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">plugins&#x3D;(</span><br><span class="line">git</span><br><span class="line">sudo</span><br><span class="line">z</span><br><span class="line">zsh-syntax-highlighting</span><br><span class="line">zsh-autosuggestions</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>插件配置完了， <code>oh my zsh</code> 也就差不多了。接下来就可以体验最丝滑又美丽的终端了，再也不用忍 <code>Windows</code> 那丑得……的终端了</p><p><del>完结撒花</del></p><p>欢迎大佬在评论区提出观点或者指正错误~</p><p>(由于写本篇博客的时候，学校的微软服务全都被墙， <code>Github</code> 未能幸免，所以文中演示的下载都是使用一些奇怪下载方式。)</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;个人环境简介-NO-2-Zsh&quot;&gt;&lt;a href=&quot;#个人环境简介-NO-2-Zsh&quot; class=&quot;headerlink&quot; title=&quot;个人环境简介 NO.2 - Zsh&quot;&gt;&lt;/a&gt;个人环境简介 NO.2 - Zsh&lt;/h1&gt;&lt;p&gt;用 &lt;code&gt;Shell&lt;</summary>
      
    
    
    
    <category term="环境简介" scheme="https://ycr10.xyz/categories/%E7%8E%AF%E5%A2%83%E7%AE%80%E4%BB%8B/"/>
    
    
    <category term="系统环境" scheme="https://ycr10.xyz/tags/%E7%B3%BB%E7%BB%9F%E7%8E%AF%E5%A2%83/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序开发笔记</title>
    <link href="https://ycr10.xyz/2021/03/14/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    <id>https://ycr10.xyz/2021/03/14/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/</id>
    <published>2021-03-14T10:18:57.000Z</published>
    <updated>2021-04-03T12:25:37.065Z</updated>
    
    <content type="html"><![CDATA[<h1 id="微信小程序开发笔记"><a href="#微信小程序开发笔记" class="headerlink" title="微信小程序开发笔记"></a>微信小程序开发笔记</h1><p>我最近正在研究一个有关于手机监控的系统，就想到了用微信小程序来作为手机端与其他的硬件进行通信。</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ol><li>微信开发者工具</li><li>Visual Studio Code  <del>(我觉得微信开发者工具太丑了，还是用vscode吧)</del></li></ol><h2 id="Visual-Studio-Code-插件准备"><a href="#Visual-Studio-Code-插件准备" class="headerlink" title="Visual Studio Code 插件准备"></a>Visual Studio Code 插件准备</h2><ol><li><p>小程序助手</p><p>让vscode 提供对 .wxss .wxml 文件后缀的支持</p></li></ol><p><img src="https://s3.ax1x.com/2021/03/14/606LUe.png" alt="1.png"></p><ol start="2"><li><p>wxml</p><p>高亮显示</p></li></ol><p><img src="https://s3.ax1x.com/2021/03/14/606Tu6.png" alt="2.png"></p><ol start="3"><li><p>vscode weapp api</p><p>小程序代码片段</p></li></ol><p><img src="https://s3.ax1x.com/2021/03/14/606Ijx.png" alt="3.png"></p><p>这样多好看~</p><p>放张图对比下</p><ol><li>微信开发者工具</li></ol><p><img src="https://s3.ax1x.com/2021/03/14/60gQyt.png" alt="5.png"></p><ol><li>Visual Studio Code</li></ol><p><img src="https://s3.ax1x.com/2021/03/14/60glOP.png" alt="4.png"></p><p>飞起来~</p><p><del>(虽然调试还是得用微信开发者工具)</del></p><p><del>屑腾讯</del></p><h2 id="使用Mqtt协议连接阿里云物联网平台"><a href="#使用Mqtt协议连接阿里云物联网平台" class="headerlink" title="使用Mqtt协议连接阿里云物联网平台"></a>使用Mqtt协议连接阿里云物联网平台</h2><p>要在微信小程序中使用 <code>websocket</code> 就必须遵守 <del>腾讯</del> 的规则。</p><blockquote><p>1.不能使用特殊的端口，仅可使用 <code>443</code> 端口，即 <code>https</code> 端口进行通信。<br>2.连接的host地址前要加 <code>wss://</code> 且不能在后面加端口号。（如 <code>mqtt.ycr10.xyz</code> 写成 <code>wss://mqtt.ycr10.xyz</code> ，而不能写成 <code> wss://mqtt.ycr10.xyz:443</code> ）</p></blockquote><h2 id="讲几个mqtt常用的函数"><a href="#讲几个mqtt常用的函数" class="headerlink" title="讲几个mqtt常用的函数"></a>讲几个mqtt常用的函数</h2><p>了解了 <code>host</code>规则后，就要开始正式连接了。</p><p>这里我使用的是广为人知的 <a href="https://github.com/mqttjs/MQTT.js/"><code>MQTT.js</code></a> 库，这是出了名的好用。</p><p>这里简单讲几个常用的操作，如有错误欢迎评论区提出。<del>（我只是一个初二的蒟蒻）</del></p><h3 id="mqtt-connect"><a href="#mqtt-connect" class="headerlink" title="mqtt.connect()"></a>mqtt.connect()</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mqtt.connect(host,options)</span><br></pre></td></tr></table></figure><p>这是一个连接函数，<code>host</code> 是连接服务器的网址， <code>options</code> 存放一些参数的。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> options = &#123;</span><br><span class="line">      connectTimeout: <span class="number">4000</span>,</span><br><span class="line">      clientId: <span class="string">&#x27;****|securemode=*,signmethod=****|&#x27;</span>, <span class="comment">// 这是你的阿里云物联网平台的Mqtt-ClientID</span></span><br><span class="line">      port: <span class="number">443</span>, <span class="comment">// 端口号，似乎只能443</span></span><br><span class="line">      username: <span class="string">&#x27;****&#x27;</span>, <span class="comment">// 这是你的阿里云物联网平台的用户名</span></span><br><span class="line">      password: <span class="string">&#x27;****&#x27;</span>, <span class="comment">// 这是你的阿里云物联网平台的密码</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这些详细的配置可以看<a class="link"   href="https://help.aliyun.com/document_detail/86706.html?accounttraceid=939d8fae0d484be685d1f2a99cab9d70mmww" >阿里云的官方文档<i class="fas fa-external-link-alt"></i></a></p><h3 id="client-subscribe"><a href="#client-subscribe" class="headerlink" title="client.subscribe()"></a>client.subscribe()</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">client.subscribe(topic，&#123;</span><br><span class="line">   qos: <span class="number">0</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>这是一个订阅主题的函数， <code>topic</code> 是你要订阅的函数，后面还可以放一些拓展参数。</p><p>注： <code>qos</code> 是MQTT设计的一套保证消息稳定传输的机制。</p><p>例子：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">client.subscribe(<span class="string">&#x27;/miniprogram/user/Text&#x27;</span>, &#123;</span><br><span class="line">        qos: <span class="number">0</span></span><br><span class="line">      &#125;, <span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!err) &#123;</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">&quot;订阅成功&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br></pre></td></tr></table></figure><h3 id="client-publish"><a href="#client-publish" class="headerlink" title="client.publish()"></a>client.publish()</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">client.publish(topic,message)</span><br></pre></td></tr></table></figure><p>这是一个发布的函数。<code>topic</code> 指的是你想要发布到的主题， <code>message</code> 指的是你想要发布的内容。</p><p>例子：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">client.publish(<span class="string">&#x27;/miniprogram/user/Text&#x27;</span>,<span class="string">&#x27;Hello World !&#x27;</span>)</span><br></pre></td></tr></table></figure><p><del>我是觉得使用率比较高的就是这几个了，学生党蒟蒻，大佬欢迎提问</del></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>微信小程序开发是比较方便的，但是因为它并不是直接运行在系统底层上的程序，所以会受到子程序微信的一定限制，程序的功能实现就没有那么方便。</p><p>完结撒花~~~</p><p>欢迎各位大佬在评论区提出观点~~~</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;微信小程序开发笔记&quot;&gt;&lt;a href=&quot;#微信小程序开发笔记&quot; class=&quot;headerlink&quot; title=&quot;微信小程序开发笔记&quot;&gt;&lt;/a&gt;微信小程序开发笔记&lt;/h1&gt;&lt;p&gt;我最近正在研究一个有关于手机监控的系统，就想到了用微信小程序来作为手机端与其他的硬件</summary>
      
    
    
    
    <category term="微信小程序" scheme="https://ycr10.xyz/categories/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="微信小程序" scheme="https://ycr10.xyz/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    <category term="开发笔记" scheme="https://ycr10.xyz/tags/%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    
    <category term="MQTT" scheme="https://ycr10.xyz/tags/MQTT/"/>
    
    <category term="JavaScript" scheme="https://ycr10.xyz/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>个人环境简介 NO.1 - Wsl 2</title>
    <link href="https://ycr10.xyz/2021/03/05/%E4%B8%AA%E4%BA%BA%E7%8E%AF%E5%A2%83%E7%AE%80%E4%BB%8B-NO-1-Wsl-2/"/>
    <id>https://ycr10.xyz/2021/03/05/%E4%B8%AA%E4%BA%BA%E7%8E%AF%E5%A2%83%E7%AE%80%E4%BB%8B-NO-1-Wsl-2/</id>
    <published>2021-03-05T10:57:15.000Z</published>
    <updated>2021-03-28T07:32:40.861Z</updated>
    
    <content type="html"><![CDATA[<h1 id="个人环境简介-NO-1-Wsl-2"><a href="#个人环境简介-NO-1-Wsl-2" class="headerlink" title="个人环境简介 NO.1 - Wsl 2"></a>个人环境简介 NO.1 - Wsl 2</h1><p>Windows 10 预览体验计划 Dev渠道 + Wsl 2 + Ubuntu 20.04 + Visual Studio Code</p><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p><del>学生党卑微++</del> </p><p>家里就一台电脑，众所周知的<del>windows命令行</del>都很……</p><p>windows + linux双系统切换又很<del>废物</del>。</p><p>所以就用 Wsl 2 来救命一波。</p><h3 id="WSL-是个啥"><a href="#WSL-是个啥" class="headerlink" title="WSL 是个啥"></a>WSL 是个啥</h3><blockquote><p>Windows Subsystem for Linux（简称WSL）是一个在Windows 10上能够运行原生Linux二进制可执行文件（ELF格式）的兼容层。</p></blockquote><p>目前 Wsl 已经更新到了 Wsl 2 。Wsl 2 相比于 Wsl 1 更加成熟了，内核更加的完整了。</p><p><img src="https://s3.ax1x.com/2021/03/03/6EPk9K.png" alt="Microsoft 官方图片"></p><p>另外，Wsl 2 已经成为了一个完整的虚拟机，而 Wsl 1 <del>并不是（个人觉得这也成了一个槽点，后面细说）</del>，虽然<del>理论上</del>和VM没什么差别，单着毕竟是Microsoft亲手调教的~ </p><h3 id="如何安装-WSL-2"><a href="#如何安装-WSL-2" class="headerlink" title="如何安装 WSL 2"></a>如何安装 WSL 2</h3><p>我就不扯理论了，直接最简单的方法处理。</p><ol><li>打开 <code>启用或关闭 Windows 功能</code></li></ol><p><img src="https://s3.ax1x.com/2021/03/03/6EPih6.png" alt="启用或关闭Windows功能"></p><ol start="2"><li>打开 <code>适用于 Linux 的 Windows 子系统</code> 和 <code>虚拟机平台</code></li></ol><p><img src="https://z3.ax1x.com/2021/03/28/cpZ7EF.png" alt="适用于 Linux 的 Windows 子系统、虚拟机平台"></p><ol start="3"><li>打开 <code>Microsoft Store</code> 下载安装 <code>Ubuntu 20.04</code> 应用</li></ol><p><img src="https://s3.ax1x.com/2021/03/03/6EPLVA.png" alt="Ubuntu20.04"></p><ol start="4"><li>打开它</li></ol><p><img src="https://s3.ax1x.com/2021/03/03/6EilZ9.png" alt="Ubuntu"></p><ol start="5"><li><p>等一会，就会自动初始化，然后输入账号密码</p><p><del>PS:Linux账号密码是会隐藏处理，所以输入没显示是正常的</del></p></li></ol><p><img src="https://s3.ax1x.com/2021/03/03/6EFkOe.png" alt="初始化"></p><ol start="6"><li><p><code>嘤嘤嘤,Windows命令行太丑了怎么办嘛？当然是Terminal啦！</code></p><p> <del>PS: Windows Terminal 网上配置较多，大家可以钻研自己的爱好，我这不做介绍。</del></p></li><li><p>安装并打开 <code>Windows Terminal</code> ，可以看到已经出现了 <code>Ubuntu 20.04</code> 的选项<br>。</p></li><li><p>然后就可以开始各位自己的 <code>Linux</code> 配置了。 </p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;个人环境简介-NO-1-Wsl-2&quot;&gt;&lt;a href=&quot;#个人环境简介-NO-1-Wsl-2&quot; class=&quot;headerlink&quot; title=&quot;个人环境简介 NO.1 - Wsl 2&quot;&gt;&lt;/a&gt;个人环境简介 NO.1 - Wsl 2&lt;/h1&gt;&lt;p&gt;Window</summary>
      
    
    
    
    <category term="环境简介" scheme="https://ycr10.xyz/categories/%E7%8E%AF%E5%A2%83%E7%AE%80%E4%BB%8B/"/>
    
    
    <category term="系统环境" scheme="https://ycr10.xyz/tags/%E7%B3%BB%E7%BB%9F%E7%8E%AF%E5%A2%83/"/>
    
  </entry>
  
  <entry>
    <title>如何使用 Arduino Mega 2560 实现一个家庭智能安防门锁?</title>
    <link href="https://ycr10.xyz/2021/02/13/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8-Arduino-Mega-2560-%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E5%AE%B6%E5%BA%AD%E6%99%BA%E8%83%BD%E5%AE%89%E9%98%B2%E9%97%A8%E9%94%81%EF%BC%9F/"/>
    <id>https://ycr10.xyz/2021/02/13/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8-Arduino-Mega-2560-%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E5%AE%B6%E5%BA%AD%E6%99%BA%E8%83%BD%E5%AE%89%E9%98%B2%E9%97%A8%E9%94%81%EF%BC%9F/</id>
    <published>2021-02-13T04:45:02.000Z</published>
    <updated>2021-03-21T09:54:49.473Z</updated>
    
    <content type="html"><![CDATA[<h1 id="如何使用-Arduino-Mega-2560-实现一个家庭智能安防门锁？"><a href="#如何使用-Arduino-Mega-2560-实现一个家庭智能安防门锁？" class="headerlink" title="如何使用 Arduino Mega 2560 实现一个家庭智能安防门锁？"></a>如何使用 Arduino Mega 2560 实现一个家庭智能安防门锁？</h1><p>说明视频见我的 <a class="link"   href="https://www.bilibili.com/video/BV1bp4y1x7Sj" >Bilibili<i class="fas fa-external-link-alt"></i></a></p><h2 id="创作灵感"><a href="#创作灵感" class="headerlink" title="创作灵感"></a>创作灵感</h2><p>&nbsp; &nbsp; &nbsp; &nbsp;新冠肺炎疫情发生以来，习近平总书记高度重视，多次主持召开会议对疫情防控工作进行研究部署，并对如何发挥社区在疫情防控中的作用提出明确要求。习近平总书记指出，要压实地方党委和政府责任，强化社区防控网格化管理，实施地毯式排查，采取更加严格、更有针对性、更加管用有效的措施，防止疫情蔓延。</p><p>&nbsp; &nbsp; &nbsp; &nbsp;本人以社区和家庭疫情防控为出发点，设计了一款智慧防疫门禁系统。本次设计的作品能够实现刷卡，蓝牙开锁等方式开启家庭门锁，同时实时监测人的体温，贴心的提示外出回家的人员消毒。防止体温过热人员回家接触家人，造成病情蔓延。</p><p>&nbsp; &nbsp; &nbsp; &nbsp;这样一个可以让人们在享受智慧家居便利性的同时，又能监测健康状况的智慧防疫门禁系统，能够很好地配合社区疫情防控，做好家庭防疫工作。</p><h2 id="设计思路"><a href="#设计思路" class="headerlink" title="设计思路"></a>设计思路</h2><p>&nbsp; &nbsp; &nbsp; &nbsp;这是一种无接触式的门锁，自然就要用到现在成熟的无线技术了。在这种小型门锁中，蓝牙技术再好不过了。再利用<code>RFID-RC522</code>模块，也能实现NFC通信。</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 疫情期间，大家对自己的健康也有极大的要求。家庭门锁也要实时监控自己的体温以及客人的体温。如果你的体温超过37.3摄氏度，那智能门锁也会利用LED灯以及蜂鸣器来警告你，同时也会紧闭门锁，做好疫情防控第一步。</p><p>&nbsp; &nbsp; &nbsp; &nbsp;直观的设计思路以及功能原理图如图1所示：</p><p><img src="https://s3.ax1x.com/2021/03/05/6mBbGD.png"></p><p>图1 设计思路及功能原理图</p><h2 id="硬件一览"><a href="#硬件一览" class="headerlink" title="硬件一览"></a>硬件一览</h2><blockquote><p>主控板：</p><p>Arduino Mega 2560 *1</p><p>配件：</p><p>RFID-RC522模块 *1</p><p>DX-BT05蓝牙模块 *1</p><p>FL-3FF-S-Z继电器模块 *1</p><p>蜂鸣器 *1</p><p>电磁锁 *1</p><p>LED *3</p><p>220Ω电阻 *3</p></blockquote><h2 id="接线图"><a href="#接线图" class="headerlink" title="接线图"></a>接线图</h2><table><thead><tr><th align="center">模块名称</th><th align="center">模块针脚</th><th align="center">Aruduino Mega针脚</th></tr></thead><tbody><tr><td align="center">Relay Mode</td><td align="center">VCC</td><td align="center">5V</td></tr><tr><td align="center">Relay Mode</td><td align="center">GND</td><td align="center">GND</td></tr><tr><td align="center">Relay Mode</td><td align="center">IN</td><td align="center">D5</td></tr><tr><td align="center">RFID-RC522</td><td align="center">IRQ</td><td align="center">D10</td></tr><tr><td align="center">RFID-RC522</td><td align="center">SCK</td><td align="center">D8</td></tr><tr><td align="center">RFID-RC522</td><td align="center">MOSI</td><td align="center">D9</td></tr><tr><td align="center">RFID-RC522</td><td align="center">MISO</td><td align="center">D11</td></tr><tr><td align="center">RFID-RC522</td><td align="center">SDA</td><td align="center">D7</td></tr><tr><td align="center">RFID-RC522</td><td align="center">RST</td><td align="center">D12</td></tr><tr><td align="center">RFID-RC522</td><td align="center">3.3V</td><td align="center">3.3V</td></tr><tr><td align="center">RFID-RC522</td><td align="center">GND</td><td align="center">GND</td></tr><tr><td align="center">Buzzer</td><td align="center">GND</td><td align="center">GND</td></tr><tr><td align="center">Buzzer</td><td align="center">VCC</td><td align="center">5V</td></tr><tr><td align="center">Buzzer</td><td align="center">I/O</td><td align="center">D2</td></tr><tr><td align="center">DX-BT05</td><td align="center">GND</td><td align="center">GND</td></tr><tr><td align="center">DX-BT05</td><td align="center">VCC</td><td align="center">5V</td></tr><tr><td align="center">DX-BT05</td><td align="center">TX</td><td align="center">RX</td></tr><tr><td align="center">DX-BT05</td><td align="center">RX</td><td align="center">TX</td></tr><tr><td align="center">DX-BT05</td><td align="center">EN</td><td align="center">5V</td></tr><tr><td align="center">mlx90614</td><td align="center">GND</td><td align="center">GND</td></tr><tr><td align="center">mlx90614</td><td align="center">VCC</td><td align="center">VCC</td></tr><tr><td align="center">mlx90614</td><td align="center">SDA</td><td align="center">SDA</td></tr><tr><td align="center">mlx90614</td><td align="center">SCL</td><td align="center">SCL</td></tr><tr><td align="center">LED-Red</td><td align="center">GND</td><td align="center">GND</td></tr><tr><td align="center">LED-Red</td><td align="center">VCC</td><td align="center">220Ω电阻端</td></tr><tr><td align="center">LED-Yellow</td><td align="center">GND</td><td align="center">GND</td></tr><tr><td align="center">LED-Yellow</td><td align="center">VCC</td><td align="center">220Ω电阻端</td></tr><tr><td align="center">LED-Green</td><td align="center">GND</td><td align="center">GND</td></tr><tr><td align="center">LED-Green</td><td align="center">VCC</td><td align="center">220Ω电阻端</td></tr><tr><td align="center">220Ω电阻</td><td align="center">一端</td><td align="center">5V</td></tr><tr><td align="center">220Ω电阻</td><td align="center">另一端</td><td align="center">LED</td></tr></tbody></table><hr><p>仿真接线图如下</p><p><img src="https://s3.ax1x.com/2021/03/05/6mBHPO.png"></p><p>图2 仿真接线图</p><h2 id="制作过程"><a href="#制作过程" class="headerlink" title="制作过程"></a>制作过程</h2><ol><li>准备木板，设计家庭木门外观：<ul><li>使用切割机切割木板，得到前门和侧门</li><li>在前门中间安装电磁锁</li></ul></li></ol><p><img src="https://s3.ax1x.com/2021/03/05/6mBIVx.jpg"></p><ol><li>门板正面外观和组装设计：<ul><li>使用电钻钻出三个LED发光二极管</li><li>在门板上沿安装红外温度检测模块</li><li>在门板上沿安装LCD液晶显示屏</li><li>在门板右上角画门禁图案</li></ul></li></ol><p><img src="https://s3.ax1x.com/2021/03/05/6mBoa6.jpg"></p><ol start="3"><li>门板背面外观和组装设计<ul><li>安装电池盒和继电器开关</li><li>安装Arduino电路板</li><li>安装门禁卡</li></ul></li></ol><p><img src="https://s3.ax1x.com/2021/03/05/6mBTIK.jpg"></p><ol start="4"><li>组装木板以及组接各个模块<ul><li>将木板前门和侧边墙壁组装</li><li>接线并通电</li></ul></li></ol><p><img src="https://s3.ax1x.com/2021/03/05/6mBqRe.jpg"></p><ol start="5"><li>测试各个模块功能以及两种开锁方式<ul><li>IC门禁卡开锁</li><li>手机蓝牙开锁</li></ul></li></ol><p><img src="https://s3.ax1x.com/2021/03/05/6mBLxH.jpg"><br><img src="https://s3.ax1x.com/2021/03/05/6mBXMd.jpg"></p><h2 id="成品外观"><a href="#成品外观" class="headerlink" title="成品外观"></a>成品外观</h2><p><img src="https://s3.ax1x.com/2021/03/05/6mBjsA.jpg"></p><p>图3 成品外观正面</p><p><img src="https://s3.ax1x.com/2021/03/05/6mBzZt.jpg"></p><p>图4 成品外观侧面</p><p><img src="https://s3.ax1x.com/2021/03/05/6mBvqI.jpg"></p><p>图5 成品外观背面</p><p><img src="https://s3.ax1x.com/2021/03/05/6mDSdP.jpg"></p><p>图6 成品外观俯视图</p><h2 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h2><p>&nbsp; &nbsp; &nbsp; &nbsp;这个家庭智能门锁提供多种开锁方式，你可以使用IC卡或者手机蓝牙打开他它。</p><p>&nbsp; &nbsp; &nbsp; &nbsp;门锁上有三个LED灯，若红灯常亮即为待机状态;绿灯亮起，蜂鸣器鸣叫两声，表示锁已打开;黄灯闪烁两次，蜂鸣器鸣叫三声，表示体温过高;红绿黄三灯亮起，蜂鸣器长鸣，即表示密码错误。</p><p>&nbsp; &nbsp; &nbsp; &nbsp;当你想要使用IC卡进行开锁操作，仅需将正确的IC卡放置到读卡区域，IC卡读到后，将会自动打开。使用蓝牙开锁时，仅需连接上<code>Smart-lock</code>蓝牙，通过串口发送密码，即可打开门锁。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&quot;rfid1.h&quot;</span> <span class="comment">//调用读卡器模块库文件</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;Adafruit_MLX90614.h&quot;</span> <span class="comment">//调用温度传感器库文件</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;LiquidCrystal_I2C.h&quot;</span> <span class="comment">//调用LCD库文件</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Wire.h&gt; //调用库文件</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> uchar unsigned char</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> uint  unsigned int</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ull unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Red  45</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Green 47</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Yellow 49</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Buzzer 2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Relay 5</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IRQ 10</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SCK 8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MOSI 9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MISO 11</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SDA 7</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> RST 12 <span class="comment">//接口定义 详情见说明文档接线图</span></span></span><br><span class="line">RFID1 rfid;</span><br><span class="line">Adafruit_MLX90614 mlx = Adafruit_MLX90614(); <span class="comment">//测温模块初始化</span></span><br><span class="line"><span class="function">LiquidCrystal_I2C <span class="title">lcd</span><span class="params">(<span class="number">0x27</span>,<span class="number">16</span>,<span class="number">2</span>)</span></span>; <span class="comment">//lcd模块初始化</span></span><br><span class="line">uchar serNum[<span class="number">5</span>];</span><br><span class="line">uchar a;</span><br><span class="line">uint b; </span><br><span class="line"><span class="keyword">double</span> tem; <span class="comment">//一些用于记录数据的变量 数组</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> <span class="comment">//初始化函数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  Serial.begin(<span class="number">9600</span>); <span class="comment">//电脑(测试)串口初始化</span></span><br><span class="line">  Serial2.begin(<span class="number">9600</span>); <span class="comment">//蓝牙模块串口初始化</span></span><br><span class="line">  pinMode(Buzzer,OUTPUT);</span><br><span class="line">  pinMode(Relay,OUTPUT); </span><br><span class="line">  pinMode(Red,OUTPUT);</span><br><span class="line">  pinMode(Yellow,OUTPUT);</span><br><span class="line">  pinMode(Green,OUTPUT); <span class="comment">//IO引脚声明</span></span><br><span class="line">  rfid.begin(IRQ,SCK,MOSI,MISO,SDA,RST); <span class="comment">//RFID模块引脚声明</span></span><br><span class="line">  mlx.begin(); <span class="comment">//温度计初始化</span></span><br><span class="line">  rfid.init(); <span class="comment">//RFID初始化</span></span><br><span class="line">  lcd.init(); <span class="comment">//lcd模块初始化</span></span><br><span class="line">  lcd.backlight(); <span class="comment">//lcd模块背光</span></span><br><span class="line">  lcd.print(<span class="string">&quot;   Smart-lock   &quot;</span>); <span class="comment">//lcd输出</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">TEM</span><span class="params">()</span> <span class="comment">//测温函数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  Serial.println(mlx.readObjectTempC()+<span class="number">5</span>); <span class="comment">//调试串口输出</span></span><br><span class="line">  tem=mlx.readObjectTempC()+<span class="number">5</span>; <span class="comment">//常量赋值</span></span><br><span class="line">  <span class="keyword">return</span> tem+<span class="number">5</span>; <span class="comment">//返回读取的温度值</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">open</span><span class="params">()</span> <span class="comment">//开门函数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(tem&lt;=<span class="number">37.3</span>) <span class="comment">//如果体温不超过37.3摄氏度，即可开门</span></span><br><span class="line">  &#123;</span><br><span class="line">    lcd.clear();</span><br><span class="line">    lcd.setCursor(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    lcd.print(<span class="string">&quot;Temperature OK&quot;</span>);</span><br><span class="line">    lcd.setCursor(<span class="number">0</span>,<span class="number">1</span>);</span><br><span class="line">    lcd.print(<span class="string">&quot;Temp is: &quot;</span>);</span><br><span class="line">    lcd.print(tem);</span><br><span class="line">    lcd.print(<span class="string">&quot;*C&quot;</span>); <span class="comment">//lcd输出</span></span><br><span class="line">    Serial.println(<span class="string">&quot;Temperature OK&quot;</span>); <span class="comment">//调试串口输出</span></span><br><span class="line">    Serial2.println(<span class="string">&quot;Temperature OK&quot;</span>); <span class="comment">//蓝牙串口输出</span></span><br><span class="line">    Serial.print(<span class="string">&quot;Turn on.&quot;</span>); <span class="comment">//调试串口输出</span></span><br><span class="line">    Serial2.print(<span class="string">&quot;Turn on.&quot;</span>); <span class="comment">//蓝牙串口输出</span></span><br><span class="line">    digitalWrite(Red,LOW);</span><br><span class="line">    digitalWrite(Green,HIGH);</span><br><span class="line">    digitalWrite(Relay,LOW);</span><br><span class="line">    digitalWrite(Buzzer,LOW); <span class="comment">//绿灯亮起，并打开电磁锁（继电器）</span></span><br><span class="line">    delay(<span class="number">100</span>);</span><br><span class="line">    digitalWrite(Buzzer,HIGH);</span><br><span class="line">    delay(<span class="number">100</span>);</span><br><span class="line">    digitalWrite(Buzzer,LOW);</span><br><span class="line">    delay(<span class="number">100</span>);</span><br><span class="line">    digitalWrite(Buzzer,HIGH); <span class="comment">//蜂鸣器鸣叫两声，代表锁已开</span></span><br><span class="line">    digitalWrite(Relay,HIGH); <span class="comment">//锁关闭</span></span><br><span class="line">    digitalWrite(Green,LOW);</span><br><span class="line">    digitalWrite(Red,HIGH); <span class="comment">//红灯重新亮起</span></span><br><span class="line">    lcd.clear();</span><br><span class="line">    lcd.setCursor(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    lcd.print(<span class="string">&quot;   Smart-lock   &quot;</span>); <span class="comment">//lcd输出</span></span><br><span class="line">    Serial.print(<span class="string">&quot;Turn off.&quot;</span>); <span class="comment">//调试串口输出</span></span><br><span class="line">    Serial2.print(<span class="string">&quot;Turn off.&quot;</span>); <span class="comment">//蓝牙串口输出</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="comment">//体温超过37.3摄氏度</span></span><br><span class="line">  &#123;</span><br><span class="line">    lcd.clear();</span><br><span class="line">    lcd.setCursor(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    lcd.print(<span class="string">&quot;Temperature HIGH&quot;</span>);</span><br><span class="line">    lcd.setCursor(<span class="number">0</span>,<span class="number">1</span>);</span><br><span class="line">    lcd.print(<span class="string">&quot;Temp is: &quot;</span>);</span><br><span class="line">    lcd.print(tem);</span><br><span class="line">    lcd.print(<span class="string">&quot;*C&quot;</span>); <span class="comment">//lcd输出</span></span><br><span class="line">    Serial.println(<span class="string">&quot;Temperature HIGH&quot;</span>); <span class="comment">//调试串口输出</span></span><br><span class="line">    Serial2.println(<span class="string">&quot;Temperature HIGH&quot;</span>); <span class="comment">//蓝牙串口输出</span></span><br><span class="line">    digitalWrite(Red,LOW);</span><br><span class="line">    digitalWrite(Yellow,HIGH);</span><br><span class="line">    delay(<span class="number">100</span>);</span><br><span class="line">    digitalWrite(Yellow,LOW);</span><br><span class="line">    delay(<span class="number">100</span>);</span><br><span class="line">    digitalWrite(Yellow,HIGH);</span><br><span class="line">    delay(<span class="number">100</span>);</span><br><span class="line">    digitalWrite(Yellow,LOW);</span><br><span class="line">    digitalWrite(Red,HIGH); <span class="comment">//黄灯闪烁两次，红灯重新亮起</span></span><br><span class="line">    digitalWrite(Buzzer,LOW);</span><br><span class="line">    delay(<span class="number">100</span>);</span><br><span class="line">    digitalWrite(Buzzer,HIGH);</span><br><span class="line">    delay(<span class="number">100</span>);</span><br><span class="line">    digitalWrite(Buzzer,LOW);</span><br><span class="line">    delay(<span class="number">100</span>);</span><br><span class="line">    digitalWrite(Buzzer,HIGH);</span><br><span class="line">    delay(<span class="number">100</span>);</span><br><span class="line">    digitalWrite(Buzzer,LOW);</span><br><span class="line">    delay(<span class="number">100</span>);</span><br><span class="line">    digitalWrite(Buzzer,HIGH); <span class="comment">//蜂鸣器鸣叫三声，表示温度过高</span></span><br><span class="line">    lcd.clear();</span><br><span class="line">    lcd.print(<span class="string">&quot;   Smart-lock   &quot;</span>); <span class="comment">//lcd输出</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> <span class="comment">//主循环函数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  uchar status;</span><br><span class="line">  uchar str[MAX_LEN];</span><br><span class="line">  digitalWrite(Relay,HIGH);</span><br><span class="line">  digitalWrite(Buzzer,HIGH);</span><br><span class="line">  digitalWrite(Red,HIGH);</span><br><span class="line">  digitalWrite(Yellow,LOW);</span><br><span class="line">  digitalWrite(Green,LOW); <span class="comment">//初始化</span></span><br><span class="line">  TEM(); <span class="comment">//测温</span></span><br><span class="line">  status = rfid.request(PICC_REQIDL, str);</span><br><span class="line">  rfid.showCardType(str);</span><br><span class="line">  status=rfid.anticoll(str);</span><br><span class="line">  <span class="keyword">if</span>(status==MI_OK)</span><br><span class="line">  &#123;</span><br><span class="line">    Serial.print(<span class="string">&quot;The card&#x27;s number is: &quot;</span>); <span class="comment">//调试串口输出</span></span><br><span class="line">    <span class="built_in">memcpy</span>(serNum,str,SCK);</span><br><span class="line">    rfid.showCardID(serNum);</span><br><span class="line">    Serial.println();</span><br><span class="line">    Serial.println();</span><br><span class="line">  &#125;</span><br><span class="line">  uchar* id=serNum; <span class="comment">//读取卡的ID  </span></span><br><span class="line">  <span class="keyword">if</span>(Serial2.available()&gt;<span class="number">0</span>)  <span class="comment">//如果蓝牙模块串口有读到信息</span></span><br><span class="line">  &#123;</span><br><span class="line">    a=Serial2.read(); <span class="comment">//蓝牙串口读取</span></span><br><span class="line">    b=<span class="number">1</span>; <span class="comment">//一个用于记录是否执行的变量</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(id[<span class="number">0</span>]==<span class="number">0xCA</span> &amp;&amp; id[<span class="number">1</span>]==<span class="number">0xD9</span> &amp;&amp; id[<span class="number">2</span>]==<span class="number">0xF0</span> &amp;&amp; id[<span class="number">3</span>]==<span class="number">0x3F</span>) <span class="comment">//如果读到了正确的卡</span></span><br><span class="line">  &#123;</span><br><span class="line">    open(); <span class="comment">//执行开门函数</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">3</span>;i++) id[i]=<span class="number">0</span>; <span class="comment">//初始值返回0</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">3</span>;i++) serNum[i]=<span class="number">0</span>; <span class="comment">//初始值返回0</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="comment">//如果不是正确的卡</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span>(status==MI_OK) <span class="comment">//且有读到卡，执行不开门</span></span><br><span class="line">    &#123;</span><br><span class="line">      lcd.clear();</span><br><span class="line">      lcd.println(<span class="string">&quot;Password Error&quot;</span>);  <span class="comment">//lcd输出</span></span><br><span class="line">      digitalWrite(Yellow,HIGH);</span><br><span class="line">      digitalWrite(Green,HIGH);</span><br><span class="line">      digitalWrite(Buzzer,LOW); <span class="comment">//红黄蓝三灯常亮，蜂鸣器响起</span></span><br><span class="line">      delay(<span class="number">3000</span>);</span><br><span class="line">      digitalWrite(Buzzer,HIGH);</span><br><span class="line">      digitalWrite(Yellow,LOW);</span><br><span class="line">      digitalWrite(Green,LOW); <span class="comment">//灯熄灭，蜂鸣器停止，代表密码错误</span></span><br><span class="line">      lcd.clear();</span><br><span class="line">      lcd.print(<span class="string">&quot;   Smart-lock   &quot;</span>);  <span class="comment">//lcd输出</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(a==<span class="string">&#x27;a&#x27;</span>) <span class="comment">//如果蓝牙串口读到密码</span></span><br><span class="line">  &#123;</span><br><span class="line">    b=<span class="number">0</span>; <span class="comment">//记录的变量值归零</span></span><br><span class="line">    open(); <span class="comment">//执行开门函数</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="comment">//若密码错误</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span>(b==<span class="number">1</span>) <span class="comment">//且有接收到数据，执行不开门</span></span><br><span class="line">    &#123;</span><br><span class="line">      lcd.clear();</span><br><span class="line">      lcd.println(<span class="string">&quot;Password Error&quot;</span>);  <span class="comment">//lcd输出</span></span><br><span class="line">      digitalWrite(Yellow,HIGH);</span><br><span class="line">      digitalWrite(Green,HIGH);</span><br><span class="line">      digitalWrite(Buzzer,LOW); <span class="comment">//红黄蓝三灯常亮，蜂鸣器响起</span></span><br><span class="line">      delay(<span class="number">3000</span>);</span><br><span class="line">      digitalWrite(Buzzer,HIGH);</span><br><span class="line">      digitalWrite(Yellow,LOW);</span><br><span class="line">      digitalWrite(Green,LOW); <span class="comment">//灯熄灭，蜂鸣器停止，代表密码错误</span></span><br><span class="line">      lcd.clear(); </span><br><span class="line">      lcd.println(<span class="string">&quot;Password Error&quot;</span>);  <span class="comment">//lcd输出</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  rfid.halt(); <span class="comment">//RFID-RC522重置</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;如何使用-Arduino-Mega-2560-实现一个家庭智能安防门锁？&quot;&gt;&lt;a href=&quot;#如何使用-Arduino-Mega-2560-实现一个家庭智能安防门锁？&quot; class=&quot;headerlink&quot; title=&quot;如何使用 Arduino Mega 25</summary>
      
    
    
    
    <category term="智能硬件" scheme="https://ycr10.xyz/categories/%E6%99%BA%E8%83%BD%E7%A1%AC%E4%BB%B6/"/>
    
    
    <category term="Arduino" scheme="https://ycr10.xyz/tags/Arduino/"/>
    
    <category term="智能硬件" scheme="https://ycr10.xyz/tags/%E6%99%BA%E8%83%BD%E7%A1%AC%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>寄生虫 影评摘录</title>
    <link href="https://ycr10.xyz/2021/02/13/%E5%AF%84%E7%94%9F%E8%99%AB-%E5%BD%B1%E8%AF%84%E6%91%98%E5%BD%95/"/>
    <id>https://ycr10.xyz/2021/02/13/%E5%AF%84%E7%94%9F%E8%99%AB-%E5%BD%B1%E8%AF%84%E6%91%98%E5%BD%95/</id>
    <published>2021-02-12T23:56:30.000Z</published>
    <updated>2021-03-20T12:22:42.251Z</updated>
    
    <content type="html"><![CDATA[<h1 id="寄生虫-影评摘录"><a href="#寄生虫-影评摘录" class="headerlink" title="寄生虫-影评摘录"></a>寄生虫-影评摘录</h1><p>来自<a class="link"   href="https://space.bilibili.com/3433092" >@狂阿弥_<i class="fas fa-external-link-alt"></i></a>的<a class="link"   href="https://www.bilibili.com/video/BV16t411g7aF" >视频<i class="fas fa-external-link-alt"></i></a>。</p><ul><li>在巨大的荒诞之下，恐怕连六岁孩童也能看懂这部电影想表达的严肃社会问题。</li></ul><hr><h3 id="表面分析"><a href="#表面分析" class="headerlink" title="表面分析"></a>表面分析</h3><p>导演：奉俊昊（社会学专业出身）</p><p>主角：金基泽一家&amp;朴社长一家</p><p>金基泽一家混入朴社长一家，最终被发现。</p><hr><h3 id="深度分析"><a href="#深度分析" class="headerlink" title="深度分析"></a>深度分析</h3><ul><li><h4 id="贫富差距"><a href="#贫富差距" class="headerlink" title="贫富差距"></a>贫富差距</h4><p>对比李沧东的《燃烧》（李沧东——富二代）</p></li></ul><blockquote><pre><code>    就产生了一种谜团</code></pre><ul><li>李沧东的谜团是一坨飘在空中的迷雾，下面的人看不到上面的世界。</li><li>奉俊昊的谜团更像是一口深不见底的黑井，上面的人朝下看，什么也看不见。</li></ul></blockquote><hr><p> 海报里的每个人，都是犯人</p><hr><p> 谜团藏在背后这栋房子里：</p><blockquote><p>村上春树说：每个人都像一栋二层小楼，</p><p>这栋楼的一层是社交场所，我们在网上看到的新闻和视频，都是一楼的事儿。</p><p>上到二楼，是比较私密的房间，我们在这里和自己独处，有爱看的书，喜欢的电影，很多vlog就是在分享二楼的私人世界，但实际上，大家在用真实二楼的碎片，搭了一个虚构的房间，展示给一楼的观众。</p><p>小楼里还有地下室。</p><p>太宰治说：“生而为人，我很抱歉。“ 连接的就是地下一层。</p><p>与自我意识紧密连接的地下一层，比较统一被共享，可以直接用语言描述，也可以用故事去表达。而在每个地下室的下层，还存在另一个不同的地下室。</p><p>著名心理学家荣格有次做梦，梦见他在家里沿着楼梯不断下行，越往下走，越是发现下面的环境的不同，先是自己的房间，然后进到陌生的房间，有15世纪和16世纪的房间，然后是罗马时代的地下室，再往下，居然还能看到一些骨头和残骸，是原始社会的地下室。</p><p>由这个梦，荣格得出，在个人的潜意识中，还存在着集体潜意识，也称作“集体无意识”。</p><p>地下二层很难用语言直接描述，每个人的打开方式不一样，但几乎所有人，都是借用故事前往的。</p></blockquote><hr><ul><li>地下与地上隔着一层土，无论软硬薄厚，那都将是无法越过的一道卡口，那地下室的气味，早已深入血脉之中，怎么也挥之不去，成了一种永久的隔阂。</li></ul><h3 id="地下二层到底是什么？为什么最后会产生恶的结果呢？"><a href="#地下二层到底是什么？为什么最后会产生恶的结果呢？" class="headerlink" title="地下二层到底是什么？为什么最后会产生恶的结果呢？"></a>地下二层到底是什么？为什么最后会产生恶的结果呢？</h3><ul><li><p>地下室支撑着地面世界的逻辑，当一楼的逻辑失去效力，地下的恶就会喷出地面，会产生流血的事件。</p></li><li><p>无论我们再怎么分析，再怎么归罪，都无法改变已经发生的事实。也无法说服自己，去理解这些事件。</p></li><li><p>只有前往地下二层，才能去一探究竟。</p><hr></li></ul><p>这部电影就像是一条“寄生虫”，即便你是六岁小孩，他也会毫不客气地钻进你的皮肤挖洞。把你拖进这黑乎乎的地下室，让你睁大眼睛，看看这个世界，到底是用什么故事堆成的。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;寄生虫-影评摘录&quot;&gt;&lt;a href=&quot;#寄生虫-影评摘录&quot; class=&quot;headerlink&quot; title=&quot;寄生虫-影评摘录&quot;&gt;&lt;/a&gt;寄生虫-影评摘录&lt;/h1&gt;&lt;p&gt;来自&lt;a class=&quot;link&quot;   href=&quot;https://space.bilibi</summary>
      
    
    
    
    <category term="摘录" scheme="https://ycr10.xyz/categories/%E6%91%98%E5%BD%95/"/>
    
    
    <category term="摘录" scheme="https://ycr10.xyz/tags/%E6%91%98%E5%BD%95/"/>
    
    <category term="影评" scheme="https://ycr10.xyz/tags/%E5%BD%B1%E8%AF%84/"/>
    
  </entry>
  
  <entry>
    <title>题解 P2952 ([USACO09OPEN]Cow Line S)</title>
    <link href="https://ycr10.xyz/2021/02/12/%E9%A2%98%E8%A7%A3-P2952-USACO09OPEN-Cow-Line-S/"/>
    <id>https://ycr10.xyz/2021/02/12/%E9%A2%98%E8%A7%A3-P2952-USACO09OPEN-Cow-Line-S/</id>
    <published>2021-02-12T08:19:14.000Z</published>
    <updated>2021-03-20T12:18:24.789Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题解-P2952-USACO09OPEN-Cow-Line-S"><a href="#题解-P2952-USACO09OPEN-Cow-Line-S" class="headerlink" title="题解 P2952 ([USACO09OPEN]Cow Line S)"></a>题解 P2952 ([USACO09OPEN]Cow Line S)</h2><p><del>这是一位萌新的第一篇题解,求关照qwq</del></p><p><a class="link"   href="https://www.luogu.com.cn/problem/P2952" >题目传送门<i class="fas fa-external-link-alt"></i></a></p><h2 id="解法由来"><a href="#解法由来" class="headerlink" title="解法由来"></a>解法由来</h2><p>这一题当然是<del>直接使用</del>deque啦</p><p>（不会deque的蒟蒻</p><p>那就用vector暴力模拟！</p><h3 id="vector简介"><a href="#vector简介" class="headerlink" title="vector简介"></a>vector简介</h3><p>头文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;vector&gt;</span><br><span class="line">using namespace std;</span><br></pre></td></tr></table></figure><p>创建一个vertor对象</p><p>类型有很多种 char int string 等等</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vector&lt;int&gt; v;</span><br></pre></td></tr></table></figure><p><del>看到这里，你应该会有疑问</del></p><p>怎么访问vector函数中的一个数呢？</p><p>有俩种实现方式</p><p>1.直接下标访问 就像int型数组一样</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">…… &#x2F;&#x2F;省略头文件以及定义(雾</span><br><span class="line">cout&lt;&lt;v[i];</span><br></pre></td></tr></table></figure><p>2.迭代器访问 <del>一种很简洁的访问方式</del></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vector&lt;int&gt;::iterator it;</span><br><span class="line">for(it&#x3D;vec.begin();it!&#x3D;vec.end();it++) cout&lt;&lt;*it&lt;&lt;endl;</span><br></pre></td></tr></table></figure><h2 id="来说说这题吧"><a href="#来说说这题吧" class="headerlink" title="来说说这题吧"></a>来说说这题吧</h2><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><p>首先，这需要用一个vector类型的数组来记录。</p><p>遇到’AL’ 就左边加</p><p>遇到’AR’ 就右边加</p><p><del>添加的函数详情看代码注释</del></p><p>以此类推</p><p>最后，再用迭代器或者for循环语句输出不就<del>完美</del>了？？</p><h2 id="淦代码"><a href="#淦代码" class="headerlink" title="淦代码"></a><del>淦代码</del></h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt; //本篇重点 vector头文件</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long </span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>; <span class="comment">// 模板中的头文件(不要问我为什么不用万能头</span></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; b; <span class="comment">//先定义个数组啊</span></span><br><span class="line"><span class="keyword">int</span> sum=<span class="number">0</span>,s,k;</span><br><span class="line"><span class="keyword">char</span> a;        <span class="comment">//一些辅助的数</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> <span class="comment">//荒废n久的快读</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> c=getchar();</span><br><span class="line">ll f=<span class="number">1</span>,s=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isdigit</span>(c))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(c==<span class="string">&#x27;-&#x27;</span>)f=<span class="number">-1</span>,c=getchar();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">isdigit</span>(c))</span><br><span class="line">&#123;</span><br><span class="line">s=(s&lt;&lt;<span class="number">3</span>)+(s&lt;&lt;<span class="number">1</span>)+c<span class="number">-48</span>;</span><br><span class="line">c=getchar();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> f*s;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;s; <span class="comment">//先读入S</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;s;i++) <span class="comment">//开始循环</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;a;</span><br><span class="line"><span class="keyword">if</span>(a==<span class="string">&#x27;A&#x27;</span>) <span class="comment">//进入</span></span><br><span class="line">&#123;</span><br><span class="line">sum++;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;a;</span><br><span class="line"><span class="keyword">if</span>(a==<span class="string">&#x27;L&#x27;</span>) b.insert(b.begin(),sum); <span class="comment">//如果是在左边加，就用insert函数加入</span></span><br><span class="line"><span class="keyword">else</span> b.push_back(sum); <span class="comment">//或者在右边，用push_back函数加入</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="comment">//否则</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;a&gt;&gt;k;</span><br><span class="line"><span class="keyword">if</span>(a==<span class="string">&#x27;L&#x27;</span>)b.erase(b.begin(),b.begin()+k); <span class="comment">//如果是在左边删k个，就用erase函数+迭代器</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;k;i++) b.pop_back(); <span class="comment">//否则在右边，就用循环+pop_back函数</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;b.size();i++) <span class="built_in">cout</span>&lt;&lt;b[i]&lt;&lt;<span class="built_in">endl</span>; <span class="comment">//输出~</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; <span class="comment">//记得擦屁股~养成良好习惯~</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><del>看，这不就淦完了？</del></p><p> 各位大佬有什么意见，欢迎评论QWQ</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;题解-P2952-USACO09OPEN-Cow-Line-S&quot;&gt;&lt;a href=&quot;#题解-P2952-USACO09OPEN-Cow-Line-S&quot; class=&quot;headerlink&quot; title=&quot;题解 P2952 ([USACO09OPEN]Cow Lin</summary>
      
    
    
    
    <category term="题解" scheme="https://ycr10.xyz/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
    <category term="C++" scheme="https://ycr10.xyz/tags/C/"/>
    
    <category term="题解" scheme="https://ycr10.xyz/tags/%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
</feed>
